# ------------------------------------------------
# NGINXのメイン設定 (eventsブロックは必須)
# ------------------------------------------------
events {
    # ワーカプロセスが同時に処理できる接続数を設定
    worker_connections 1024;
}

# ------------------------------------------------
# HTTPキャッシュとリバースプロキシ設定
# ------------------------------------------------
http {
    # 1. キャッシュの保存場所と設定 (リバースプロキシキャッシュ)
    # /data/nginx/cache にキャッシュを保存し、最大1GBまで使用
    # Docker Composeで定義されたボリューム名と合わせる
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;

    # $uri（リクエストURI）に基づいて、キャッシュを使用するか (1) しないか (0) を決定します。
    # map $uri $should_cache {
        # default         0;  # デフォルトではキャッシュしない (プライベートなAPIや認証が必要なもの)

        # 以下のパスに完全に一致、または以下のパスから始まる場合にキャッシュを許可 (1)
        # 例: /api/public/data/123 など
        # ~^/api/articles/*   1;

        # 特定のAPIエンドポイントだけキャッシュする場合の例
        # ~^/api/items/list$ 1;
    # }

    server {
        listen 80;
        server_name example.com;

        # 💡 Nginxの静的ファイルルート (Docker Composeでマウントした ./front)
        root /usr/share/nginx/html;

        # 2. 静的ファイルのキャッシュ設定 (強いキャッシュ)
        location ~* ^/static/.*(css|js|jpg|png|gif|ico)$ {
            # 修正ポイント:
            # 1. Nginxコンテナ内のパスにファイルがあるか探す
            # 2. なければ、名前付きロケーション @app_proxy にリクエストを転送する
            try_files $uri @app_proxy;

            # Nginxで配信できる場合は、ここで強いキャッシュヘッダーを付与
            expires 1y;
            log_not_found off;
            add_header Cache-Control "public, max-age=60";
        }

        # 3. ルートパス / は index.html を探すか、/api/ 以外を app に転送する
        location / {
            # 1. Nginxのroot（/usr/share/nginx/html/）からファイルを検索
            # 2. なければ @app_proxy に転送
            try_files $uri $uri/ @app_proxy;
        }

        # 4. @app_proxy: Spring Bootアプリケーションへのフォールバック（動的コンテンツ・API・見つからなかった静的ファイル用）
        location @app_proxy {
            proxy_pass http://app:8080;
            proxy_set_header Host $host;
            proxy_set_header Connection "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # 5. APIキャッシュを /api/ パスに限定
        location /api/ {
            proxy_pass http://app:8080;

            # $should_cache 変数が 0 の場合、キャッシュをスキップします。
            # proxy_cache_bypass $should_cache;
            # proxy_no_cache $should_cache;

            proxy_cache api_cache;

            proxy_set_header If-None-Match $http_if_none_match;
            proxy_set_header If-Modified-Since $http_if_modified_since;
        }
    }
}