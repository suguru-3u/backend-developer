openapi: 3.0.0
info:
  version: 1.0.0
  title: リアルタイム・プロジェクト管理API
  description: >-
    本APIの通信はHTTPS（TLS）で行うことを必須とします。
paths:
  /api/projects:
    $ref: '#/components/paths/Projects'
  /api/projects/{projectId}:
    $ref: '#/components/paths/ProjectById'
  /api/realtime-notification/stream:
    $ref: '#/components/paths/RealtimeNotificationStream'

components:
  paths:
    Projects:
      get:
        summary: プロジェクト一覧取得API
        description: プロジェクトの一覧を取得します
        parameters:
          - $ref: '#/components/parameters/CacheControlHeader'
          - name: category
            in: query
            description: カテゴリーで絞り込み
            required: false
            schema:
              type: string
              description: 登録されているカテゴリー以外の場合、エラーになります
          - name: team
            in: query
            description: チームで絞り込み
            required: false
            schema:
              type: string
              description: 登録されているチーム以外の場合、エラーになります
          - name: dueDate
            in: query
            description: 期日で絞り込み
            required: false
            schema:
              type: string
              format: date
        responses:
          '200':
            description: プロジェクト一覧
            headers:
              Content-Type:
                $ref: '#/components/headers/ContentType'
              Cache-Control:
                $ref: '#/components/headers/CacheControl'
              X-Content-Type-Options:
                $ref: '#/components/headers/xContentTypeOptions'
              X-XSS-Protection:
                $ref: '#/components/headers/xXssProtection'
              X-Frame-Options:
                $ref: '#/components/headers/xFrameOptions'
              Strict-Transport-Security:
                $ref: '#/components/headers/StrictTransportSecurity'
              Content-Security-Policy:
                $ref: '#/components/headers/ContentSecurityPolicy'
              Referrer-Policy:
                $ref: '#/components/headers/ReferrerPolicy'
              X-RateLimit-Limit:
                $ref: '#/components/headers/XRateLimitLimit'
              X-RateLimit-Remaining:
                $ref: '#/components/headers/XRateLimitRemaining'
              X-RateLimit-Reset:
                $ref: '#/components/headers/XRateLimitReset'
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Project'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
      post:
        summary: プロジェクト新規作成API
        description: 新しいプロジェクトを作成します
        parameters:
          - $ref: '#/components/parameters/CacheControlHeader'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateRequest'
        responses:
          '200':
            description: 作成したプロジェクト
            headers:
              Content-Type:
                $ref: '#/components/headers/ContentType'
              Cache-Control:
                $ref: '#/components/headers/CacheControl'
              X-Content-Type-Options:
                $ref: '#/components/headers/xContentTypeOptions'
              X-XSS-Protection:
                $ref: '#/components/headers/xXssProtection'
              X-Frame-Options:
                $ref: '#/components/headers/xFrameOptions'
              Strict-Transport-Security:
                $ref: '#/components/headers/StrictTransportSecurity'
              Content-Security-Policy:
                $ref: '#/components/headers/ContentSecurityPolicy'
              Referrer-Policy:
                $ref: '#/components/headers/ReferrerPolicy'
              X-RateLimit-Limit:
                $ref: '#/components/headers/XRateLimitLimit'
              X-RateLimit-Remaining:
                $ref: '#/components/headers/XRateLimitRemaining'
              X-RateLimit-Reset:
                $ref: '#/components/headers/XRateLimitReset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Project'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
    ProjectById:
      get:
        summary: プロジェクト詳細取得API
        description: 指定したプロジェクトの詳細を取得します
        parameters:
          - $ref: '#/components/parameters/CacheControlHeader'
          - name: projectId
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: プロジェクト詳細
            headers:
              Content-Type:
                $ref: '#/components/headers/ContentType'
              Cache-Control:
                $ref: '#/components/headers/CacheControl'
              X-Content-Type-Options:
                $ref: '#/components/headers/xContentTypeOptions'
              X-XSS-Protection:
                $ref: '#/components/headers/xXssProtection'
              X-Frame-Options:
                $ref: '#/components/headers/xFrameOptions'
              Strict-Transport-Security:
                $ref: '#/components/headers/StrictTransportSecurity'
              Content-Security-Policy:
                $ref: '#/components/headers/ContentSecurityPolicy'
              Referrer-Policy:
                $ref: '#/components/headers/ReferrerPolicy'
              X-RateLimit-Limit:
                $ref: '#/components/headers/XRateLimitLimit'
              X-RateLimit-Remaining:
                $ref: '#/components/headers/XRateLimitRemaining'
              X-RateLimit-Reset:
                $ref: '#/components/headers/XRateLimitReset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Project'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
      patch:
        summary: プロジェクト更新API
        description: 指定したプロジェクトを更新します
        parameters:
          - $ref: '#/components/parameters/CacheControlHeader'
          - name: projectId
            in: path
            required: true
            schema:
              type: integer
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdateRequest'
        responses:
          '200':
            description: 更新後のプロジェクト
            headers:
              Content-Type:
                $ref: '#/components/headers/ContentType'
              Cache-Control:
                $ref: '#/components/headers/CacheControl'
              X-Content-Type-Options:
                $ref: '#/components/headers/xContentTypeOptions'
              X-XSS-Protection:
                $ref: '#/components/headers/xXssProtection'
              X-Frame-Options:
                $ref: '#/components/headers/xFrameOptions'
              Strict-Transport-Security:
                $ref: '#/components/headers/StrictTransportSecurity'
              Content-Security-Policy:
                $ref: '#/components/headers/ContentSecurityPolicy'
              Referrer-Policy:
                $ref: '#/components/headers/ReferrerPolicy'
              X-RateLimit-Limit:
                $ref: '#/components/headers/XRateLimitLimit'
              X-RateLimit-Remaining:
                $ref: '#/components/headers/XRateLimitRemaining'
              X-RateLimit-Reset:
                $ref: '#/components/headers/XRateLimitReset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Project'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
      delete:
        summary: プロジェクト削除API
        description: 指定したプロジェクトを削除します
        parameters:
          - $ref: '#/components/parameters/CacheControlHeader'
          - name: projectId
            in: path
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 削除成功（レスポンスなし）
            headers:
              Cache-Control:
                $ref: '#/components/headers/CacheControl'
              X-Content-Type-Options:
                $ref: '#/components/headers/xContentTypeOptions'
              X-XSS-Protection:
                $ref: '#/components/headers/xXssProtection'
              X-Frame-Options:
                $ref: '#/components/headers/xFrameOptions'
              Strict-Transport-Security:
                $ref: '#/components/headers/StrictTransportSecurity'
              Content-Security-Policy:
                $ref: '#/components/headers/ContentSecurityPolicy'
              Referrer-Policy:
                $ref: '#/components/headers/ReferrerPolicy'
              X-RateLimit-Limit:
                $ref: '#/components/headers/XRateLimitLimit'
              X-RateLimit-Remaining:
                $ref: '#/components/headers/XRateLimitRemaining'
              X-RateLimit-Reset:
                $ref: '#/components/headers/XRateLimitReset'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
    RealtimeNotificationStream:
      get:
        summary: SSEによるリアルタイム通知ストリーム
        description: 担当・ウォッチプロジェクトの更新通知をSSEでリアルタイム配信します
        security:
          - JWT: [ ]
        parameters:
          - $ref: '#/components/parameters/CacheControlHeader'
        responses:
          '202':
            description: |
              接続成功。イベントストリームを開始します。
              サーバーは `created`,`update` イベントを送信します。  
              各イベントの `data` フィールドには、以下の `RealtimeNotification` スキーマに準拠したJSONオブジェクトが含まれます。
              ```
              event: update
              data: {"projectId":1,"projectName":"新規開発プロジェクト",...}
              ```
            headers:
              Content-Type:
                schema:
                  type: string
                  example: text/event-stream
              Connection:
                schema:
                  type: string
                  example: keep-alive
          '401':
            $ref: '#/components/responses/Unauthorized'
          '500':
            $ref: '#/components/responses/InternalServerError'

  parameters:
    CacheControlHeader:
      name: Cache-Control
      in: header
      description: キャッシュ制御
      required: false
      schema:
        type: string
        example: 'no-cache'

  headers:
    ContentType:
      description: コンテンツタイプ
      schema:
        type: string
        example: application/json; charset=utf-8
    CacheControl:
      description: キャッシュ制御
      schema:
        type: string
        example: 'no-store, no-cache'
    xContentTypeOptions:
      description: MIMEタイプのスニッフィング防止
      schema:
        type: string
        example: 'nosniff'
    xXssProtection:
      description: XSS攻撃防止
      schema:
        type: string
        example: '1; mode=block'
    xFrameOptions:
      description: クリックジャッキング防止
      schema:
        type: string
        example: 'DENY'
    StrictTransportSecurity: # 追加
      description: HTTPS通信を強制する
      schema:
        type: string
        example: 'max-age=31536000; includeSubDomains'
    ContentSecurityPolicy: # 追加
      description: コンテンツセキュリティポリシー
      schema:
        type: string
        example: "default-src 'self'"
    ReferrerPolicy: # 追加
      description: リファラー情報の送信ポリシー
      schema:
        type: string
        example: 'strict-origin-when-cross-origin'
    XRateLimitLimit: # 追加
      description: 現在の期間におけるリクエスト数の上限
      schema:
        type: integer
        example: 100
    XRateLimitRemaining: # 追加
      description: 現在の期間における残りのリクエスト数
      schema:
        type: integer
        example: 99
    XRateLimitReset: # 追加
      description: 現在の期間がリセットされるまでの残り秒数
      schema:
        type: integer
        example: 599

  responses:
    BadRequest:
      description: リクエスト不正
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: 認証エラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: 権限エラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: リソースが見つかりません
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: レートリミット超過
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: サーバーエラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: 新規開発プロジェクト
        description:
          type: string
          example: 新しいサービスの開発
        category:
          type: string
          example: 開発
        team:
          type: string
          example: Aチーム
        dueDate:
          type: string
          format: date
          example: 2025-12-31
    ProjectCreateRequest:
      type: object
      required:
        - name
        - description
        - category
        - team
        - dueDate
      properties:
        name:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 1024
        category:
          type: string
          description: 登録されているカテゴリー以外の場合、エラーになります
        team:
          type: string
          description: 登録されているチーム以外の場合、エラーになります
        dueDate:
          type: string
          format: date
    ProjectUpdateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 1024
        category:
          type: string
          description: 登録されているカテゴリー以外の場合、エラーになります
        team:
          type: string
          description: 登録されているチーム以外の場合、エラーになります
        dueDate:
          type: string
          format: date
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - invalid_request
            - unauthorized
            - forbidden
            - not_found
            - rate_limit_exceeded
            - internal_error
        message:
          type: string
    RealtimeNotification:
      type: object
      properties:
        projectId:
          type: integer
        name:
          type: string
        description:
          type: string
        category:
          type: string
        team:
          type: string
        dueDate:
          type: string
          format: date
        updatedAt:
          type: string
          format: date-time

  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - JWT: [ ]
